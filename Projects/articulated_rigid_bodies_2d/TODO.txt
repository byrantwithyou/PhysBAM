- * get angular relative velocity
  * damp it (i.e., reduce by some amount)
  * decide on new angular relative velocity
  * linear relative velocity should = 0


- * compute impulses that would damp you to zero and then only take a fraction
  * don't overdamp because you'll have bounce back
  * don't want forces to go to infinity when you apply forces, shouldn't bemore than j or j_tau

- don't want to apply more than required to make it stop because otherwise it will bounce back

computes
- * rotation quaternion telling how to get there
  * apply spring force
  
- increment force?
- apply right force and see where that goes
- 3D -- do it in the 2d plane


-----------------------------
Paper notes

Rather than applying the forces at the attachment points, we may want to 
filter the forces that would applied htere into torques and then just 
apply the torques at the joints. THis would be a simplified model fo the 
control and a logical step for moving in to apply control. First filtered 
torques, followed by forces at the attachment points, then volumetric 
muscles. There is increasing complexity in the forces and the ability to 
control the motion as we move along this path.

This also brings up and important point about graphics versus robotics. 
Robotics takes the world and simplifies it and then builds their model 
around that. Graphics seems to always work towards the most complicated 
example. We'd like to point out that we can get a complicated example and 
then simplify it. THen we can alter the simplified version and have the 
changes be reflected in the more complicated version. Basically, push the 
move towards working in a simplified set up before doing the complicated 
one.
