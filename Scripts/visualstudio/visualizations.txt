;------------------------------------------------------------------------------
; PhysBAM::ARRAY
;------------------------------------------------------------------------------
PhysBAM::ARRAY<*,*>{
    preview(#(
        "[", $e.m, "](",
        #array(
            expr : $e.base_pointer[$i],
            size : $e.m
        ),
        ")"
    ))
    children(#(
        [_members] : [$e,!],
        m : $e.m,
        #array(
            expr : $e.base_pointer[$i],
            size : $e.m,
            base : 1
        )
    ))
}

;------------------------------------------------------------------------------
; PhysBAM::ARRAY_VIEW
;------------------------------------------------------------------------------
PhysBAM::ARRAY_VIEW<*,*>{
    preview(#(
        "[", $e.m, "](",
        #array(
            expr : $e.base_pointer[$i],
            size : $e.m
        ),
        ")"
    ))
    children(#(
        [_members] : [$e,!],
        m : $e.m,
        #array(
            expr : $e.base_pointer[$i],
            size : $e.m,
            base : 1
        )
    ))
}

;------------------------------------------------------------------------------
; PhysBAM::HASHTABLE
;------------------------------------------------------------------------------
PhysBAM::HASHTABLE<*,*>{
    preview(#(
        "[", $e.number_of_entries, "](",
        #array(
            expr : $e.table.base_pointer[$i],
            size : $e.table.m
        ) : #(
            #array(
                expr : $e,
                size : $e.state == 1
            )
        ),
        ")"
    ))
    children(#(
        [_members] : [$e,!],
        number_of_entries : $e.number_of_entries,
        #array(
            expr : $e.table.base_pointer[$i],
            size : $e.table.m
        ) : #(
            [value] : #array(
                expr : $e,
                size : $e.state == 1
            )
        )
    ))
}

;------------------------------------------------------------------------------
; PhysBAM::HASHTABLE_ENTRY_TEMPLATE<*,void>
;------------------------------------------------------------------------------
PhysBAM::HASHTABLE_ENTRY_TEMPLATE<*,void>{
    preview( #if( $e.state == 1 )( $e.key )#else( "{}" ) )
}

;------------------------------------------------------------------------------
; PhysBAM::HASHTABLE_ENTRY_TEMPLATE<*,*>
;------------------------------------------------------------------------------
PhysBAM::HASHTABLE_ENTRY_TEMPLATE<*,*>{
    preview(
        #if( $e.state == 1 )(
            #( "(", $e.key, ",", $e.data, ")" )
        )
        #else(
            "{}"
        )
    )
}

;------------------------------------------------------------------------------
; PhysBAM::MATRIX_MXN
;------------------------------------------------------------------------------
PhysBAM::MATRIX_MXN<*>{
    preview(#(
        "[", $e.m, ",", $e.n, "](",
        #array(
            expr : $e.x[$i],
            size : $e.m*$e.n
        ),
        ")"
    ))
    children(#(
        [_members] : [$e,!],
        m : $e.m,
        n : $e.n,
        [warning - displayed indices are reversed from actual] : [0, x],
        #array(
            expr : $e.x[$i],
            base : 1,
            size : $e.m*($r==0)+$e.n*($r==1),
            rank : 2
        )
    ))
}

;------------------------------------------------------------------------------
; PhysBAM::PAIR
;------------------------------------------------------------------------------
PhysBAM::PAIR<*,*>{
    preview(#( "(", $e.x, ",", $e.y, ")" ))
}

;------------------------------------------------------------------------------
; PhysBAM::SPARSE_VECTOR_ND<*>
;------------------------------------------------------------------------------
PhysBAM::SPARSE_VECTOR_ND<*>{
    preview(#(
        "[", $e.number_of_active_indices, "](",
        #array(
            expr : $e.indices[$i+1],
            size : $e.number_of_active_indices
        ),
        ")"
    ))
    children(#(
        [_members] : [$e,!],
        n : $e.n,
        number_of_active_indices : $e.number_of_active_indices,
        #array(
            expr : $e.x[$i+1],
            size : $e.number_of_active_indices,
            base : 1
        )
    ))
}

;------------------------------------------------------------------------------
; PhysBAM::TRIPLE
;------------------------------------------------------------------------------
PhysBAM::TRIPLE<*,*,*>{
    preview(#( "(", $e.x, ",", $e.y, ",", $e.z, ")" ))
}

;------------------------------------------------------------------------------
; PhysBAM::VECTOR<*,0>
;------------------------------------------------------------------------------
PhysBAM::VECTOR<*,0>{
    preview(#( "()" ))
}

;------------------------------------------------------------------------------
; PhysBAM::VECTOR<*,1>
;------------------------------------------------------------------------------
PhysBAM::VECTOR<*,1>{
    preview(#( "(", $e.x, ")" ))
}

;------------------------------------------------------------------------------
; PhysBAM::VECTOR<*,2>
;------------------------------------------------------------------------------
PhysBAM::VECTOR<*,2>{
    preview(#( "(", $e.x, ",", $e.y, ")" ))
}

;------------------------------------------------------------------------------
; PhysBAM::VECTOR<*,3>
;------------------------------------------------------------------------------
PhysBAM::VECTOR<*,3>{
    preview(#( "(", $e.x, ",", $e.y, ",", $e.z, ")" ))
}

;------------------------------------------------------------------------------
; PhysBAM::VECTOR<*,*>
;------------------------------------------------------------------------------
PhysBAM::VECTOR<*,*>{
    preview(#(
        "(",
        #array(
            expr : $e.array[$i],
            size : $T2
        ),
        ")"
    ))
    children(#(
        [_members] : [$e,!],
        #array(
            expr : $e.array[$i],
            size : $T2,
            base : 1
        )
    ))
}

;------------------------------------------------------------------------------
; PhysBAM::VECTOR_ND<*>
;------------------------------------------------------------------------------
PhysBAM::VECTOR_ND<*>{
    preview(#(
        "[", $e.n, "](",
        #array(
            expr : $e.x[$i],
            size : $e.n
        ),
        ")"
    ))
    children(#(
        [_members] : [$e,!],
        n : $e.n,
        #array(
            expr : $e.x[$i],
            size : $e.n,
            base : 1
        )
    ))
}
