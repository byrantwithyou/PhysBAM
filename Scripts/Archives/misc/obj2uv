#!/usr/bin/python

import os
import sys
import optparse
from struct import *

parser = optparse.OptionParser("usage: %prog [options] input.obj output.uv")
(options,args)=parser.parse_args()
if len(args)!=2: parser.error("invalid number of arguments")

input=open(args[0],'r')
if args[1][-3:]=='.gz':
    output=os.popen('gzip -c > '+args[1],'w')
else:
    output=open(args[1],'w')

vertices=[]
triangles=[]
for line in input:
    words=line.split()
    if not len(words): continue
    type=words[0]
    args=words[1:]
    if type=='#': pass
    elif type=='vt':
        vertices.append(map(float,args)[:2])
    elif type=='f':
        v=map(lambda t:int(t.split('/')[1]),args)
        for i in range(len(v)-2):
            triangles.append([v[0],v[i+1],v[i+2]])
    else: pass #assert(false)

# write texture points
output.write(pack('i',len(vertices)))
for p in vertices: output.write(pack('ff',p[0],p[1]))

# write triangle mesh
output.write(pack('ii',3,len(triangles)))
for t in triangles: output.write(pack('iii',t[0],t[1],t[2]))

