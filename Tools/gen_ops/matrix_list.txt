op M1 Outer_Product V1:u
return(i,j) u(i) u(j) *
gen m=(0,3) M1=S(m,m) V1=V(m)

op M1 Outer_Product V1:u V2:v
return(i,j) u(i) v(j) *
gen m=(0,3) n=(0,3) M1=M(m,n) V1=V(m) V2=V(n)

op V1 operator* M2:A V2:v
return(i) A(i,k) v(k) * sum(k,m)
gen m=(0,3) n=(0,3) V1=V(n) M2=M(n,m) V2=V(m)
gen m=(0,3) V1=V(m) M2=S(m,m) V2=V(m)
gen m=(0,3) V1=V(m) M2=U(m,m) V2=V(m)
gen m=(0,3) V1=V(m) M2=D(m,m) V2=V(m)

op V1 Transpose_Times M2:A V2:v
return(i) A(k,i) v(k) * sum(k,m)
gen m=(0,3) n=(0,3) V1=V(n) M2=M(m,n) V2=V(m)
gen m=(0,3) V1=V(m) M2=S(m,m) V2=V(m)
gen m=(0,3) V1=V(m) M2=U(m,m) V2=V(m)
gen m=(0,3) V1=V(m) M2=D(m,m) V2=V(m)




op M1 operator- M1:A
return(i,j) A(i,j) ~
gen m=(0,3) M1=M(m,m)
gen m=(0,3) M1=S(m,m)
gen m=(0,3) M1=U(m,m)
gen m=(0,3) M1=D(m,m)

op M1 operator+ M2:A M3:B
return(i,j) A(i,j) B(i,j) +
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=D(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=M(m,m)
gen m=(0,3) M1=S(m,m) M2=S(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=S(m,m)
gen m=(0,3) M1=S(m,m) M2=D(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=S(m,m)
gen m=(0,3) M1=S(m,m) M2=S(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=U(m,m)
gen m=(0,3) M1=U(m,m) M2=U(m,m) M3=U(m,m)
gen m=(0,3) M1=M(m,m) M2=D(m,m) M3=U(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=U(m,m)

op M1 operator- M2:A M3:B
return(i,j) A(i,j) B(i,j) -
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=D(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=M(m,m)
gen m=(0,3) M1=S(m,m) M2=S(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=S(m,m)
gen m=(0,3) M1=S(m,m) M2=D(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=S(m,m)
gen m=(0,3) M1=S(m,m) M2=S(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=U(m,m)
gen m=(0,3) M1=U(m,m) M2=U(m,m) M3=U(m,m)
gen m=(0,3) M1=M(m,m) M2=D(m,m) M3=U(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=U(m,m)

op M1 operator* M2:A M3:B
return(i,j) A(i,k) B(k,j) * sum(k,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=D(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=D(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=D(m,m)
gen m=(0,3) M1=U(m,m) M2=U(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=U(m,m)
gen m=(0,3) M1=U(m,m) M2=U(m,m) M3=U(m,m)
gen m=(0,3) M1=U(m,m) M2=D(m,m) M3=U(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=U(m,m)

op M1 Transpose_Times M2:A M3:B
return(i,j) A(k,i) B(k,j) * sum(k,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=D(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=D(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=D(m,m)
gen m=(0,3) M1=U(m,m) M2=U(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=U(m,m)
gen m=(0,3) M1=U(m,m) M2=U(m,m) M3=U(m,m)
gen m=(0,3) M1=U(m,m) M2=D(m,m) M3=U(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=U(m,m)

op M1 Times_Transpose M2:A M3:B
return(i,j) A(i,k) B(j,k) * sum(k,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=D(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=M(m,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=D(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=S(m,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=D(m,m)
gen m=(0,3) M1=U(m,m) M2=U(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=D(m,m)
gen m=(0,3) M1=M(m,m) M2=S(m,m) M3=U(m,m)
gen m=(0,3) M1=U(m,m) M2=U(m,m) M3=U(m,m)
gen m=(0,3) M1=U(m,m) M2=D(m,m) M3=U(m,m)
gen m=(0,3) M1=M(m,m) M2=M(m,m) M3=U(m,m)

op M1 operator* M1:A T:a
return(i,j) A(i,j) a *
gen m=(0,3) M1=M(m,m)
gen m=(0,3) M1=U(m,m)
gen m=(0,3) M1=S(m,m)

op M1 operator/ M1:A T:a
return(i,j) A(i,j) a /
gen m=(0,3) M1=M(m,m)
gen m=(0,3) M1=U(m,m)
gen m=(0,3) M1=S(m,m)

op M1 operator+ M1:A T:a
return(i,j) A(i,j) a I(i,j) * +
gen m=(0,3) M1=M(m,m)
gen m=(0,3) M1=U(m,m)
gen m=(0,3) M1=S(m,m)

op M1 operator- M1:A T:a
return(i,j) A(i,j) a I(i,j) * -
gen m=(0,3) M1=M(m,m)
gen m=(0,3) M1=U(m,m)
gen m=(0,3) M1=S(m,m)

op T Double_Contract M1:A
return A(i,j) A(i,j) * sum(i,m) sum(j,m)
gen m=(0,3) M1=M(m,m)
gen m=(0,3) M1=U(m,m)
gen m=(0,3) M1=S(m,m)

op T Trace M1:A
return A(i,i) sum(i,m)
gen m=(0,3) M1=M(m,m)
gen m=(0,3) M1=U(m,m)
gen m=(0,3) M1=S(m,m)

op M1 Identity_Matrix
return(i,j) I(i,j)
gen m=(0,3) M1=M(m,m)
gen m=(0,3) M1=U(m,m)
gen m=(0,3) M1=S(m,m)

op M1 Transposed M2:A
return(i,j) A(j,i)
gen m=(0,3) M1=M(m,m) M2=M(m,m)
gen m=(0,3) M1=S(m,m) M2=S(m,m)
gen m=(0,3) M1=M(m,m) M2=U(m,m)

op M1 Transpose_Times_Self M2:A
return(i,j) A(k,i) A(k,j) * sum(k,m)
gen m=(0,3) M1=S(m,m) M2=M(m,m)
gen m=(0,3) M1=S(m,m) M2=S(m,m)
gen m=(0,3) M1=S(m,m) M2=U(m,m)

op M1 Times_With_Symmetric_Result M2:A M3:B
return(i,j) A(i,k) B(k,j) * sum(k,m)
gen m=(0,3) M1=S(m,m) M2=M(m,m) M3=M(m,m)
gen m=(0,3) M1=S(m,m) M2=S(m,m) M3=M(m,m)
gen m=(0,3) M1=S(m,m) M2=M(m,m) M3=S(m,m)
gen m=(0,3) M1=S(m,m) M2=D(m,m) M3=M(m,m)
gen m=(0,3) M1=S(m,m) M2=M(m,m) M3=D(m,m)

op M1 Times_Transpose_With_Symmetric_Result M2:A M3:B
return(i,j) A(i,k) B(j,k) * sum(k,m)
gen m=(0,3) M1=S(m,m) M2=M(m,m) M3=M(m,m)
gen m=(0,3) M1=S(m,m) M2=S(m,m) M3=M(m,m)
gen m=(0,3) M1=S(m,m) M2=M(m,m) M3=S(m,m)
gen m=(0,3) M1=S(m,m) M2=D(m,m) M3=M(m,m)
gen m=(0,3) M1=S(m,m) M2=M(m,m) M3=D(m,m)

op M1 Transpose_Times_With_Symmetric_Result M2:A M3:B
return(i,j) A(k,i) B(k,j) * sum(k,m)
gen m=(0,3) M1=S(m,m) M2=M(m,m) M3=M(m,m)
gen m=(0,3) M1=S(m,m) M2=S(m,m) M3=M(m,m)
gen m=(0,3) M1=S(m,m) M2=M(m,m) M3=S(m,m)
gen m=(0,3) M1=S(m,m) M2=D(m,m) M3=M(m,m)
gen m=(0,3) M1=S(m,m) M2=M(m,m) M3=D(m,m)

op M1 Twice_Symmetric_Part M2:A
return(i,j) A(i,j) A(j,i) +
gen m=(0,3) M1=S(m,m) M2=M(m,m)
gen m=(0,3) M1=S(m,m) M2=U(m,m)
gen m=(0,3) M1=S(m,m) M2=S(m,m)

op M1 Times_Self_Transpose M2:A
return(i,j) A(i,k) A(j,k) * sum(k,m)
gen m=(0,3) M1=S(m,m) M2=M(m,m)
gen m=(0,3) M1=S(m,m) M2=S(m,m)
gen m=(0,3) M1=S(m,m) M2=U(m,m)

op M1 Diagonal_Part M2:A
return(i,j) A(i,j) I(i,j) *
gen m=(0,3) M1=D(m,m) M2=M(m,m)
gen m=(0,3) M1=D(m,m) M2=S(m,m)
gen m=(0,3) M1=D(m,m) M2=U(m,m)

op M1 Cross_Product_Matrix V1:u
return(i,j) e(i,k,j) u(k) * sum(k,3)
gen M1=M(3,3) V1=V(3)

op M1 Cross_Product_Matrix V1:u
return(i,j) e(i,2,j) u(0) *
gen M1=M(2,2) V1=V(1)

op M1 Cross_Product_Matrix V1:u
return(i,j) 0
gen M1=M(1,1) V1=V(0)

op M1 Times_Cross_Product_Matrix M1:A V1:u
return(r,j) e(i,k,j) A(r,i) u(k) * * sum(i,3) sum(k,3)
gen M1=M(3,3) V1=V(3)

op M1 Cross_Product_Matrix_Times M1:A V1:u
return(i,r) e(i,k,j) u(k) A(j,r) * * sum(j,3) sum(k,3)
gen M1=M(3,3) V1=V(3)

op M1 Times_Cross_Product_Matrix M1:A V1:u
return(r,j) e(i,2,j) A(r,i) u(0) * * sum(i,2)
gen M1=M(2,2) V1=V(1)

op M1 Cross_Product_Matrix_Times M1:A V1:u
return(i,r) e(i,2,j) u(0) * A(j,r) u(k) * * sum(j,2)
gen M1=M(2,2) V1=V(1)

op M1 Times_Cross_Product_Matrix M1:A V1:u
return(i,j) 0
gen M1=M(1,1) V1=V(0)

op M1 Cross_Product_Matrix_Times M1:A V1:u
return(i,j) 0
gen M1=M(1,1) V1=V(0)

op V1 Contract_Permutation_Tensor M1:A
return(k) e(i,j,k) A(i,j) * sum(i,3) sum(j,3)
gen M1=M(3,3) V1=V(3)

op V1 Contract_Permutation_Tensor M1:A
return(k) e(i,j,2) A(i,j) * sum(i,2) sum(j,2)
gen M1=M(2,2) V1=V(1)

op V1 Contract_Permutation_Tensor M1:A
return(k) 0
gen M1=M(1,1) V1=V(0)
